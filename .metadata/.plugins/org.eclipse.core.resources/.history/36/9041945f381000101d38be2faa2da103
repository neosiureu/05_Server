package edu.kh.servlet.controller;

import java.io.IOException;

import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

/* "/example1"이라는 클라이언트의 요청을 받아서 처리한 후 응답을 해줄 서블릿 클래스를 만든다
 그 서블릿의 이름이 ExampleController1이고 extends한다



import jakarta.servlet.http.HttpServlet; => http프로토콜 서비스를 지원하는 추상클래스
-> 상속 받아서 사용해야 한다
클래스만 만들어도 아직 그 자체가 서블릿이 된 것은 아님

[Servelt 등록 절차]
1. web.xml에 이 클래스가 서블릿이라고 직접 작성하는 것이 하나의 방법
"/example1"이 오면 이 클래스가 처리하겠다고 말함

2. @WebServlet()이라는 방식을 이용하는 방법


*/



// controller의 역할: request에 따른 어떤 service를 호출하지 제어하며 어떻게 응답할지 제어하는 역할

public class ExampleController1 extends HttpServlet {
	
	/*
	 * what is doGet()?
	 * get방식의 요청이 왔을 때 처리하는 요청
	 * HttpServlet이 제공하는 메서드를 오버라이딩하여 스스로 정의
	 * */
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {


		// HttpServeltRequest
		/* -클라이언트가 요청 시 생성되는 객체
		// 요청 시 전달된 데이터, 또는 요청한 클라이언트의 정보와 같은 유연한 요청 처리를 하기 위한 객체를 제공
*/		
		
		
	}
	

}
